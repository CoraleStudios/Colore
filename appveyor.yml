notifications:
- provider: Slack
  channel: colore
  auth_token:
    secure: q1G3kdpLxdD6RzSNVDZoEktdr3pcUY5KFXqxaV3mzGWWgOAyREl0ZHBNQUSWTLCy
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true

-
  branches:
    only:
      - master

  version: 1.0.{build}

  skip_tags: true

  install:
    - nuget restore

  configuration: Release

  platform:
  - x86
  - x64
  - Any CPU

  matrix:
    fast_finish: true

  environment:
    COVERALLS_REPO_TOKEN:
      secure: /52HsSigAGXgmKFcFuNjgC3PPMIUkarMod0zxTDesVS5VNpKCyeqdBY3Ssy3R3Mg

  assembly_info:
    patch: true
    file: Corale.Colore\Properties\AssemblyInfo.cs
    assembly_version: '{version}'
    assembly_file_version: '{version}'
    assembly_informational_version: '{version}-release'

  nuget:
    disable_publish_on_pr: true

  build:
    project: Corale.Colore.sln
    verbosity: normal

  after_build:
    - ps: >-
        $Env:BIN_STUB = "$Env:CONFIGURATION"
        If ($Env:PLATFORM -eq "Any CPU")
        {
          $Env:COLORE_ARTIFACT_ZIP = "colore_anycpu.zip"
        }
        Else
        {
          $Env:BIN_STUB = "$Env:PLATFORM\$Env:BIN_STUB"
          If ($Env:PLATFORM -eq "x86")
          {
            $Env:COLORE_ARTIFACT_ZIP = "colore_x86.zip"
          }
          Else
          {
            $Env:COLORE_ARTIFACT_ZIP = "colore_x64.zip"
          }
        }
    - 7z a %COLORE_ARTIFACT_ZIP% %APPVEYOR_BUILD_FOLDER%\Corale.Colore\bin\%BIN_STUB%\*.dll
    - 7z a %COLORE_ARTIFACT_ZIP% %APPVEYOR_BUILD_FOLDER%\Corale.Colore\bin\%BIN_STUB%\*.xml
    - 7z a %COLORE_ARTIFACT_ZIP% %APPVEYOR_BUILD_FOLDER%\Corale.Colore\bin\%BIN_STUB%\*.pdb

  after_test:
    - ps: >-
        If($Env:PLATFORM -eq "Any CPU")
        {
          $Env:TESTS_DLL = "Corale.Colore.Tests\bin\$Env:CONFIGURATION\Corale.Colore.Tests.dll"
        }
        Else
        {
          $Env:TESTS_DLL = "Corale.Colore.Tests\bin\$Env:PLATFORM\$Env:CONFIGURATION\Corale.Colore.Tests.dll"
        }
        If($Env:PLATFORM -eq "x86")
        {
          $Env:NUNIT_CONSOLE_EXECUTABLE = "nunit-console-x86.exe"
        }
        Else
        {
          $Env:NUNIT_CONSOLE_EXECUTABLE = "nunit-console.exe"
        }
    - packages\OpenCover.4.5.3723\OpenCover.Console.exe -register:user -filter:"+[Corale.Colore*]* -[*Tests]* -[*]Corale.Colore.Native* -[*]Corale.Colore.Razer.NativeMethods*" -target:"packages\NUnit.Runners.2.6.4\tools\%NUNIT_CONSOLE_EXECUTABLE%" -targetargs:"/noshadow /domain:single %TESTS_DLL%" -output:coverage.xml
    - packages\coveralls.io.1.2.2\tools\coveralls.net.exe --opencover coverage.xml

  artifacts:
  - path: colore_x86.zip
    name: colore_x86
  - path: colore_x64.zip
    name: colore_x64
  - path: colore_anycpu.zip
    name: colore_anycpu
  - path: '**\*.nupkg'
    name: nuget_packages

  deploy:
  - provider: GitHub
    release: v$(appveyor_build_version)
    description: Automatic release created by AppVeyor.
    auth_token:
      secure: ydn12l0oWmrQy0gZiWsLypa0kzYDBjVqAzlrrZ1+s97QRsCYkK3aA4KigRtC4CVm
    artifact: colore_x86, colore_x64, colore_anycpu, nuget_packages
    draft: true
    prerelease: false
    on:
      branch: master
      appveyor_repo_tag: false

-
  branches:
    only:
      - develop

  version: 0.0.{build}

  skip_tags: true

  install:
    - nuget restore

  configuration: Debug

  platform:
  - x86
  - x64
  - Any CPU

  matrix:
    fast_finish: true

  environment:
    COVERALLS_REPO_TOKEN:
      secure: /52HsSigAGXgmKFcFuNjgC3PPMIUkarMod0zxTDesVS5VNpKCyeqdBY3Ssy3R3Mg

  assembly_info:
    patch: true
    file: Corale.Colore\Properties\AssemblyInfo.cs
    assembly_version: '{version}'
    assembly_file_version: '{version}'
    assembly_informational_version: '{version}-{branch}'

  nuget:
    disable_publish_on_pr: true

  build:
    project: Corale.Colore.sln
    verbosity: normal

  after_build:
    - ps: >-
        $Env:BIN_STUB = "$Env:CONFIGURATION"
        If ($Env:PLATFORM -eq "Any CPU")
        {
          $Env:COLORE_ARTIFACT_ZIP = "colore_anycpu.zip"
        }
        Else
        {
          $Env:BIN_STUB = "$Env:PLATFORM\$Env:BIN_STUB"
          If ($Env:PLATFORM -eq "x86")
          {
            $Env:COLORE_ARTIFACT_ZIP = "colore_x86.zip"
          }
          Else
          {
            $Env:COLORE_ARTIFACT_ZIP = "colore_x64.zip"
          }
        }
    - 7z a %COLORE_ARTIFACT_ZIP% %APPVEYOR_BUILD_FOLDER%\Corale.Colore\bin\%BIN_STUB%\*.dll
    - 7z a %COLORE_ARTIFACT_ZIP% %APPVEYOR_BUILD_FOLDER%\Corale.Colore\bin\%BIN_STUB%\*.xml
    - 7z a %COLORE_ARTIFACT_ZIP% %APPVEYOR_BUILD_FOLDER%\Corale.Colore\bin\%BIN_STUB%\*.pdb

  after_test:
    - ps: >-
        If($Env:PLATFORM -eq "Any CPU")
        {
          $Env:TESTS_DLL = "Corale.Colore.Tests\bin\$Env:CONFIGURATION\Corale.Colore.Tests.dll"
        }
        Else
        {
          $Env:TESTS_DLL = "Corale.Colore.Tests\bin\$Env:PLATFORM\$Env:CONFIGURATION\Corale.Colore.Tests.dll"
        }
        If($Env:PLATFORM -eq "x86")
        {
          $Env:NUNIT_CONSOLE_EXECUTABLE = "nunit-console-x86.exe"
        }
        Else
        {
          $Env:NUNIT_CONSOLE_EXECUTABLE = "nunit-console.exe"
        }
    - packages\OpenCover.4.5.3723\OpenCover.Console.exe -register:user -filter:"+[Corale.Colore*]* -[*Tests]* -[*]Corale.Colore.Native* -[*]Corale.Colore.Razer.NativeMethods*" -target:"packages\NUnit.Runners.2.6.4\tools\%NUNIT_CONSOLE_EXECUTABLE%" -targetargs:"/noshadow /domain:single %TESTS_DLL%" -output:coverage.xml
    - packages\coveralls.io.1.2.2\tools\coveralls.net.exe --opencover coverage.xml

  artifacts:
  - path: Corale.Colore\bin\x86\$(configuration)\Corale.Colore.dll
    name: colore_x86_dll
  - path: Corale.Colore\bin\x64\$(configuration)\Corale.Colore.dll
    name: colore_x64_dll
  - path: Corale.Colore\bin\$(configuration)\Corale.Colore.dll
    name: colore_anycpu_dll
  - path: colore_x86.zip
    name: colore_x86
  - path: colore_x64.zip
    name: colore_x64
  - path: colore_anycpu.zip
    name: colore_anycpu

-
  version: 0.0.{build}

  skip_tags: true

  install:
    - nuget restore

  configuration: Debug

  platform: x64

  matrix:
    fast_finish: true

  environment:
    COVERALLS_REPO_TOKEN:
      secure: /52HsSigAGXgmKFcFuNjgC3PPMIUkarMod0zxTDesVS5VNpKCyeqdBY3Ssy3R3Mg
    TESTS_DLL: Corale.Colore.Tests\bin\x64\Debug\Corale.Colore.Tests.dll

  assembly_info:
    patch: true
    file: Corale.Colore\Properties\AssemblyInfo.cs
    assembly_version: '{version}'
    assembly_file_version: '{version}'
    assembly_informational_version: '{version}-{branch}'

  nuget:
    disable_publish_on_pr: true

  build:
    project: Corale.Colore.sln
    verbosity: normal

  after_test:
    - packages\OpenCover.4.5.3723\OpenCover.Console.exe -register:user -filter:"+[Corale.Colore*]* -[*Tests]* -[*]Corale.Colore.Native* -[*]Corale.Colore.Razer.NativeMethods*" -target:"packages\NUnit.Runners.2.6.4\tools\%NUNIT_CONSOLE_EXECUTABLE%" -targetargs:"/noshadow /domain:single %TESTS_DLL%" -output:coverage.xml
    - packages\coveralls.io.1.2.2\tools\coveralls.net.exe --opencover coverage.xml
